scalar Upload

type Marking {
    id: ID!
    userId: String!
    regionId: String
    title: String!
    content: String
    poster: String
    trashTypes: [String]
    location: Location
    files: [File]
    createdAt: String
    isApproved: Boolean
    category: String
}

type File {
    name: String
    path: String
}

type Location {
    type: String
    coordinates: [Float]
}

input MarkingInput {
    userId: String!
    regionId: String
    title: String!
    content: String
    poster: String
    trashTypes: [String]
    latitude: Float
    longitude: Float
    isApproved: Boolean
    category: String
    files: [Upload]
}

type Query {
    getMarkingById(id: ID!): Marking
    getAllMarkings: [Marking]
}

type Mutation {
    createMarking(markingInput: MarkingInput): Marking
    updateMarking(id: ID!, markingInput: MarkingInput): Marking
    deleteMarking(id: ID!): Boolean
    uploadFile(file: Upload!): File
}
